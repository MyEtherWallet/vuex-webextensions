{"version":3,"file":"index.js","sources":["../src/logger.js","../src/utils.js","../src/backgroundScript.js","../src/browser.js","../src/contentScript.js","../src/index.js"],"sourcesContent":["/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n *\n *  Helper class for logging messages of the plugin\n */\n\nclass Logger {\n  constructor() {\n    if (!Logger.instance) {\n      this.loggerLevel = 'warning';\n      this.levels = ['verbose', 'debug', 'info', 'warning', 'error', 'none'];\n      Logger.instance = this;\n    }\n\n    return Logger.instance;\n  }\n\n  /**\n   * Set the minimun log level for show messages\n   * @param {string} loggerLevel - The minimun log level to log.\n   * @returns {null} This function didn't return any value\n   */\n  setLoggerLevel(loggerLevel) {\n    this.loggerLevel = loggerLevel;\n  }\n\n  /**\n   * Check if message should be logged through his level and logger level\n   * @param {string} logLevel - The message to log.\n   * @returns {boolean} Return if message should be logged or not\n   */\n  shouldLog(logLevel) {\n    return this.levels.indexOf(logLevel) >= this.levels.indexOf(this.loggerLevel);\n  }\n\n  /**\n   * Show verbose message on console\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  verbose(message) {\n    this.printMessage('verbose', message);\n  }\n\n  /**\n   * Show debug message on console\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  debug(message) {\n    this.printMessage('debug', message);\n  }\n\n  /**\n   * Show info message on console\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  info(message) {\n    this.printMessage('info', message);\n  }\n\n  /**\n   * Show warning message on console\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  warning(message) {\n    this.printMessage('warning', message);\n  }\n\n  /**\n   * Show error message on console\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  error(message) {\n    this.printMessage('error', message);\n  }\n\n  /**\n   * Format and print message on console\n   * @param {string} level - The logging level of message.\n   * @param {string} message - The message to log.\n   * @returns {null} This function didn't return any value\n   */\n  printMessage(level, message) {\n    // Filter messages by level\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    // Format the message\n    var capitalizedLevel = level.charAt(0).toUpperCase() + level.slice(1);\n    var formattedMessage = `[${capitalizedLevel}] Vuex WebExtensions: ${message}`;\n\n    if (level == 'error') {\n      // eslint-disable-next-line no-console\n      console.error(formattedMessage);\n    } else if (level == 'warning') {\n      // eslint-disable-next-line no-console\n      console.warn(formattedMessage);\n    } else if (level == 'info') {\n      // eslint-disable-next-line no-console\n      console.info(formattedMessage);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(formattedMessage);\n    }\n  }\n}\n\nconst instance = new Logger();\n\nexport default instance;\n","/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n */\n\nfunction filterObject(source, keys) {\n  // eslint-disable-next-line\n  console.log(source, keys);\n  const newObject = {};\n\n  keys.forEach((key) => {\n    const value = source[key];\n\n    if (typeof value !== 'undefined' && value) {\n      newObject[key] = value;\n    }\n  });\n\n  return newObject;\n}\n\nexport { filterObject };\n","/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n */\n\nimport Logger from './logger';\nimport { filterObject } from './utils';\n\nclass BackgroundScript {\n  constructor(store, browser, settings) {\n    this.store = store;\n    this.browser = browser;\n    this.settings = settings;\n    this.connections = [];\n\n    // Restore persistent state datas from localstorage\n    if (this.settings.persistentStates.length) {\n      Logger.info(`Persistent states detected on config, reading from localstorage...`);\n\n      this.browser.getPersistentStates().then((savedStates) => {\n        if (savedStates !== null) {\n          Logger.verbose(`Saved persistent states found on localstorage`);\n\n          this.store.commit('vweReplaceState', {\n            ...this.store.state,\n            ...filterObject(savedStates, this.settings.persistentStates)\n          });\n\n          // Sync loaded state with all connections\n          if (this.connections.length > 0) {\n            Logger.info(`Sending initial state to other contexts...`);\n\n            for (var i = this.connections.length - 1; i >= 0; i--) {\n              this.syncCurrentState(this.connections[i]);\n            }\n          }\n        } else {\n          Logger.debug(`No data found on localstorage for persistent states`);\n        }\n      });\n    }\n\n    // Hook mutations\n    this.store.subscribe((mutation) => {\n      Logger.debug(`Hooked mutation (${mutation.type})`);\n\n      // If it's ignored mutation don't sync with the other contexts\n      if (this.settings.ignoredMutations.length > 0 && this.settings.ignoredMutations.includes(mutation.type)) {\n        Logger.info(`Mutation (${mutation.type}) are on ignored mutations list, skiping...`);\n\n        return;\n      }\n\n      // Send mutation to connections pool\n      for (var i = this.connections.length - 1; i >= 0; i--) {\n        // If received mutations list of connection is empty isn't his mutation, send it\n        if (!this.connections[i].receivedMutations.length) {\n          this.sendMutation(this.connections[i], mutation);\n        }\n\n        // Check if is one of his mutations\n        for (var j = this.connections[i].receivedMutations.length - 1; j >= 0; j--) {\n          if (this.connections[i].receivedMutations[j].type == mutation.type && this.connections[i].receivedMutations[j].payload == mutation.payload) {\n            this.connections[i].receivedMutations.splice(j, 1);\n          } else if (i == 0) {\n            this.sendMutation(this.connections[i], mutation);\n          }\n        }\n      }\n\n      // Save persistent states to local storage\n      browser.savePersistentStates(filterObject(this.store.state, this.settings.persistentStates));\n    });\n\n    // Hook actions (Vuex version => 2.5.0)\n    if (this.settings.syncActions == true) {\n      try {\n        Logger.verbose(`Listening for actions`);\n\n        this.store.subscribeAction((action) => {\n          Logger.debug(`Hooked action (${action.type})`);\n\n          // If it's ignored action don't sync with the other contexts\n          if (this.settings.ignoredActions.length > 0 && this.settings.ignoredActions.includes(action.type)) {\n            Logger.info(`Action (${action.type}) are on ignored actions list, skiping...`);\n\n            return;\n          }\n\n          // Send action to connections pool\n          for (var i = this.connections.length - 1; i >= 0; i--) {\n            // If received actions list of connection is empty isn't his action, send it\n            if (!this.connections[i].receivedActions.length) {\n              this.sendAction(this.connections[i], action);\n            }\n\n            // Check if is one of his actions\n            for (var j = this.connections[i].receivedActions.length - 1; j >= 0; j--) {\n              if (this.connections[i].receivedActions[j].type == action.type) {\n                this.connections[i].receivedActions.splice(j, 1);\n              } else if (i == 0) {\n                this.sendAction(this.connections[i], action);\n              }\n            }\n          }\n        });\n      } catch (err) {\n        Logger.info(`Can't sync actions because isn't available in your Vuex version, use Vuex v2.5.0 or later for this feature`);\n      }\n    }\n\n    // Start listening for connections\n    browser.handleConnection((connection) => {\n      this.onConnection(connection);\n    });\n  }\n\n  onConnection(connection) {\n    // Remove from connections on disconnect\n    connection.onDisconnect.addListener((conn) => {\n      this.onDisconnect(conn);\n    });\n\n    // Initialize empty lists of receivedMutations and receivedActions\n    connection.receivedMutations = [];\n    connection.receivedActions = [];\n\n    // Listen to messages\n    connection.onMessage.addListener((message) => {\n      this.onMessage(connection, message);\n    });\n\n    // Add to connections pool\n    this.connections.push(connection);\n\n    // Send current state\n    this.syncCurrentState(connection);\n  }\n\n  onDisconnect(connection) {\n    for (var i = this.connections.length - 1; i >= 0; i--) {\n      if (this.connections[i].name === connection.name) {\n        this.connections.splice(i, 1);\n      }\n    }\n  }\n\n  onMessage(connection, message) {\n    if (!message.type) {\n      return;\n    }\n\n    switch (message.type) {\n      // Process mutation messages from content scripts\n      case '@@STORE_SYNC_MUTATION': {\n        connection.receivedMutations.push(message.data);\n        this.store.commit(message.data.type, message.data.payload);\n        break;\n      }\n\n      // Process action messages from content scripts\n      case '@@STORE_SYNC_ACTION': {\n        connection.receivedActions.push(message.data);\n        this.store.dispatch(message.data.type, message.data.payload);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }\n\n  syncCurrentState(connection) {\n    try {\n      connection.postMessage({\n        type: '@@STORE_SYNC_STATE',\n        data: this.store.state\n      });\n    } catch (err) {\n      Logger.error(`Initial state not sent: ${err}`);\n    }\n  }\n\n  sendMutation(connection, mutation) {\n    Logger.verbose(`Sending mutation (${mutation.type}) to connection: ${connection.name}`);\n\n    try {\n      connection.postMessage({\n        type: '@@STORE_SYNC_MUTATION',\n        data: mutation\n      });\n    } catch (err) {\n      Logger.error(`Mutation not sent: ${err}`);\n    }\n  }\n\n  sendAction(connection, action) {\n    Logger.verbose(`Sending action (${action.type}) to connection: ${connection.name}`);\n\n    try {\n      connection.postMessage({\n        type: '@@STORE_SYNC_ACTION',\n        data: action\n      });\n    } catch (err) {\n      Logger.error(`Action not sent: ${err}`);\n    }\n  }\n}\n\nexport default BackgroundScript;\n","/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n *\n *  Custom class to apply polyfills without dependencies\n *  and offer crossbrowser compatibility\n */\n\n/* global chrome, browser */\n\nimport Logger from './logger';\n\nvar browsers = Object.freeze({\n  firefox: {\n    name: 'Mozilla Firefox',\n    namespace: 'browser',\n    type: 'promise'\n  },\n\n  chrome: {\n    name: 'Google Chrome',\n    namespace: 'chrome',\n    type: 'callback'\n  },\n\n  edge: {\n    name: 'Microsoft Edge',\n    namespace: 'browser',\n    type: 'callback'\n  }\n});\n\nclass Browser {\n  constructor() {\n    this.browser = null;\n    this.detectBrowser();\n  }\n\n  detectBrowser() {\n    if (typeof chrome !== 'undefined') {\n      if (typeof browser !== 'undefined') {\n        this.browser = browsers.firefox;\n\n        return;\n      }\n\n      this.browser = browsers.chrome;\n\n      return;\n    }\n\n    this.browser = browsers.edge;\n  }\n\n  isBackgroundScript(script) {\n    return new Promise((resolve) => {\n      try {\n        if (this.browser == browsers.chrome) {\n          chrome.runtime.getBackgroundPage(function(backgroundPage) {\n            return resolve(script === backgroundPage);\n          });\n        } else if (this.browser == browsers.firefox) {\n          browser.runtime.getBackgroundPage().then(function(backgroundPage) {\n            return resolve(script === backgroundPage);\n          });\n        } else if (this.browser == browsers.edge) {\n          browser.runtime.getBackgroundPage(function(backgroundPage) {\n            return resolve(script === backgroundPage);\n          });\n        }\n      } catch (err) {\n        return resolve(false);\n      }\n\n      return false;\n    });\n  }\n\n  getPersistentStates() {\n    return new Promise((resolve, reject) => {\n      try {\n        if (this.browser == browsers.chrome) {\n          chrome.storage.local.get('@@vwe-persistence', function(data) {\n            if (data['@@vwe-persistence']) {\n              return resolve(data['@@vwe-persistence']);\n            }\n\n            return resolve(null);\n          });\n        } else if (this.browser == browsers.firefox) {\n          browser.storage.local.get('@@vwe-persistence').then(function(data) {\n            if (data['@@vwe-persistence']) {\n              return resolve(data['@@vwe-persistence']);\n            }\n\n            return resolve(null);\n          });\n        } else if (this.browser == browsers.edge) {\n          browser.storage.local.get('@@vwe-persistence', function(data) {\n            if (data['@@vwe-persistence']) {\n              return resolve(data['@@vwe-persistence']);\n            }\n\n            return resolve(null);\n          });\n        }\n      } catch (err) {\n        return reject(err);\n      }\n\n      return false;\n    });\n  }\n\n  savePersistentStates(datas) {\n    if (this.browser == browsers.chrome) {\n      try {\n        chrome.storage.local.set({\n          '@@vwe-persistence': datas\n        });\n      } catch (err) {\n        Logger.error(`Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?`);\n      }\n    } else if (this.browser == browsers.firefox) {\n      try {\n        browser.storage.local.set({\n          '@@vwe-persistence': datas\n        });\n      } catch (err) {\n        Logger.error(`Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?`);\n      }\n    } else if (this.browser == browsers.edge) {\n      try {\n        browser.storage.local.set({\n          '@@vwe-persistence': datas\n        });\n      } catch (err) {\n        Logger.error(`Can't write persistent states to local storage. Did you grant storage permission to your WebExtension?`);\n      }\n    }\n  }\n\n  handleConnection(callback) {\n    if (this.browser == browsers.chrome) {\n      return chrome.runtime.onConnect.addListener(callback);\n    }\n\n    return browser.runtime.onConnect.addListener(callback);\n  }\n\n  connectToBackground(connectionName) {\n    if (this.browser == browsers.chrome) {\n      return chrome.runtime.connect({\n        name: connectionName\n      });\n    }\n\n    return browser.runtime.connect({\n      name: connectionName\n    });\n  }\n}\n\nexport default Browser;\n","/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n */\n\nimport Logger from './logger';\n\nclass ContentScript {\n  constructor(store, browser, settings) {\n    this.store = store;\n    this.browser = browser;\n    this.settings = settings;\n    this.scriptId = Math.random()\n      .toString(36)\n      .substr(2, 9);\n    this.connection = null;\n    this.receivedMutations = [];\n    this.receivedActions = [];\n    this.initialized = false;\n    this.pendingMutations = [];\n    this.pendingActions = [];\n\n    // Connect to background script\n    this.connection = browser.connectToBackground(`${this.settings.connectionName}_${this.scriptId}`);\n\n    // Listen for messages\n    this.connection.onMessage.addListener((message) => {\n      this.onMessage(message);\n    });\n\n    // Hook mutations\n    Logger.verbose(`Listening for mutations`);\n    this.store.subscribe((mutation) => {\n      this.hookMutation(mutation);\n    });\n\n    // Hook actions (Vuex version >= 2.5.0)\n    if (this.settings.syncActions == true) {\n      try {\n        Logger.verbose(`Listening for actions`);\n        this.store.subscribeAction((action) => {\n          // Clean event object on payload, this produce error on webextensions messaging serialization (\"The object could not be cloned.\")\n          if (action.payload instanceof Event) {\n            action.payload = null;\n          }\n\n          this.hookAction(action);\n        });\n      } catch (err) {\n        Logger.info(`Can't sync actions because isn't available in your Vuex version, use Vuex v2.5.0 or later for this feature`);\n      }\n    }\n  }\n\n  /**\n   * Listener for incomming messages from background script.\n   * @param {object} message - Message received from background script.\n   * @returns {null} This function didn't return any value\n   */\n  onMessage(message) {\n    Logger.verbose(`Received message from background`);\n\n    // Don't process messages without type property, aren't from the plugin\n    if (!message.type) {\n      return;\n    }\n\n    switch (message.type) {\n      // Process initial state from the background\n      case '@@STORE_SYNC_STATE': {\n        Logger.info(`Received store initial state`);\n        this.store.commit('vweReplaceState', message.data);\n        this.initialized = true;\n        this.processPendingMutations();\n        break;\n      }\n\n      // Process mutation messages from background script\n      case '@@STORE_SYNC_MUTATION': {\n        Logger.debug(`Received mutation ${message.data.type}`);\n\n        // Don't commit any mutation from other contexts before the initial state sync\n        if (!this.initialized) {\n          Logger.info(`Received mutation (${message.data.type}) but the store isn't initilized yet`);\n          break;\n        }\n\n        this.receivedMutations.push(message.data);\n        this.store.commit(message.data.type, message.data.payload);\n        break;\n      }\n\n      // Process action messages from background script\n      case '@@STORE_SYNC_ACTION': {\n        Logger.debug(`Received action ${message.data.type}`);\n\n        // Don't commit any action from other contexts before the initial state sync\n        if (!this.initialized) {\n          Logger.info(`Received action (${message.data.type}) but the store isn't initilized yet`);\n          break;\n        }\n\n        this.receivedActions.push(message.data);\n        this.store.dispatch(message.data);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Hook for retrieve the comited mutations from content script.\n   * @param {object} mutation - Mutation comited on content script store.\n   * @returns {null} This function didn't return any value\n   */\n  hookMutation(mutation) {\n    Logger.debug(`Hooked mutation (${mutation.type})`);\n\n    // If it's store initialization mutation don't send again to other contexts\n    if (mutation.type === 'vweReplaceState') {\n      Logger.debug(`vweReplaceState mutation don't need send to other contexts`);\n\n      return;\n    }\n\n    // If it's ignored mutation don't sync with the other contexts\n    if (this.settings.ignoredMutations.length > 0 && this.settings.ignoredMutations.includes(mutation.type)) {\n      Logger.info(`Mutation (${mutation.type}) are on ignored mutations list, skiping...`);\n\n      return;\n    }\n\n    // If store isn't initialized yet, just enque the mutation to reaply it after sync\n    if (!this.initialized) {\n      Logger.info(`Hooked mutation (${mutation.type}) before initialization, enqued on pending mutations`);\n\n      return this.pendingMutations.push(mutation);\n    }\n\n    // If received mutations list are empty it's own mutation, send to background\n    if (!this.receivedMutations.length) {\n      return this.sendMutation(mutation);\n    }\n\n    // Check if it's received mutation, if it's just ignore it, if not send to background\n    for (var i = this.receivedMutations.length - 1; i >= 0; i--) {\n      if (this.receivedMutations[i].type == mutation.type && this.receivedMutations[i].payload == mutation.payload) {\n        Logger.verbose(`Mutation ${this.receivedMutations[i].type} it's received mutation, don't send to background again`);\n        this.receivedMutations.splice(i, 1);\n      } else if (i == 0) {\n        this.sendMutation(mutation);\n      }\n    }\n  }\n\n  /**\n   * Hook for retrieve the comited actions from content script.\n   * @param {object} action - Action comited on content script store.\n   * @returns {null} This function didn't return any value\n   */\n  hookAction(action) {\n    Logger.debug(`Hooked action (${action.type})`);\n\n    // If it's ignored action don't sync with the other contexts\n    if (this.settings.ignoredActions.length > 0 && this.settings.ignoredActions.includes(action.type)) {\n      Logger.info(`Action (${action.type}) are on ignored action list, skiping...`);\n\n      return;\n    }\n\n    // If store isn't initialized yet, just enque the action to reaply it after sync\n    if (!this.initialized) {\n      Logger.info(`Hooked action (${action.type}) before initialization, enqued on pending actions`);\n\n      return this.pendingActions.push(action);\n    }\n\n    // If received actions list are empty it's own action, send to background\n    if (!this.receivedActions.length) {\n      return this.sendAction(action);\n    }\n\n    // Check if it's received action, if it's just ignore it, if not send to background\n    for (var i = this.receivedActions.length - 1; i >= 0; i--) {\n      if (this.receivedActions[i].type == action.type && this.receivedActions[i].payload == action.payload) {\n        Logger.verbose(`Action ${this.receivedActions[i].type} it's received action, don't send to background again`);\n        this.receivedActions.splice(i, 1);\n      } else if (i == 0) {\n        this.sendAction(action);\n      }\n    }\n  }\n\n  /**\n   * Helper function to send mutations to background script.\n   * @param {object} mutation - The mutation to send.\n   * @returns {null} This function didn't return any value\n   */\n  sendMutation(mutation) {\n    Logger.debug(`Sending mutation (${mutation.type}) to background script`);\n\n    this.connection.postMessage({\n      type: '@@STORE_SYNC_MUTATION',\n      data: mutation\n    });\n  }\n\n  /**\n   * Helper function to send actions to background script.\n   * @param {object} action - The action to send.\n   * @returns {null} This function didn't return any value\n   */\n  sendAction(action) {\n    Logger.debug(`Sending action (${action.type}) to background script`);\n\n    this.connection.postMessage({\n      type: '@@STORE_SYNC_ACTION',\n      data: action\n    });\n  }\n\n  /**\n   * Process pending mutations queue.\n   * @returns {null} This function didn't return any value\n   */\n  processPendingMutations() {\n    Logger.debug(`Processing pending mutations list...`);\n\n    if (!this.pendingMutations.length) {\n      Logger.info(`The pending mutations list are empty`);\n\n      return;\n    }\n\n    for (var i = 0; i < this.pendingMutations.length; i++) {\n      Logger.verbose(`Processing pending mutation (${this.pendingMutations[i].type}) with payload: ${this.pendingMutations[i].payload}`);\n      this.store.commit(this.pendingMutations[i].type, this.pendingMutations[i].payload);\n\n      // Clean the pending mutation when are applied\n      this.pendingMutations.splice(i, 1);\n    }\n  }\n\n  /**\n   * Process pending actions queue.\n   * @returns {null} This function didn't return any value\n   */\n  processPendingActions() {\n    Logger.debug(`Processing pending actions list...`);\n\n    if (!this.pendingActions.length) {\n      Logger.info(`The pending actions list are empty`);\n\n      return;\n    }\n\n    for (var i = 0; i < this.pendingActions.length; i++) {\n      Logger.verbose(`Processing pending action (${this.pendingActions[i].type}) with payload: ${this.pendingActions[i].payload}`);\n      this.store.dispatch(this.pendingActions[i].type, this.pendingActions[i].payload);\n\n      // Clean the pending action when are applied\n      this.pendingActions.splice(i, 1);\n    }\n  }\n}\n\nexport default ContentScript;\n","/*\n *  Copyright 2018 - 2019 Mitsuha Kitsune <https://mitsuhakitsune.com>\n *  Licensed under the MIT license.\n */\n\nimport BackgroundScript from './backgroundScript';\nimport Browser from './browser';\nimport ContentScript from './contentScript';\nimport Logger from './logger';\n\nvar defaultOptions = {\n  connectionName: 'vuex-webextensions',\n  loggerLevel: 'warning',\n  persistentStates: [],\n  ignoredMutations: [],\n  ignoredActions: [],\n  syncActions: true\n};\n\nexport default function(opt) {\n  if (typeof window === 'undefined') {\n    // This allows authors to unit test more easily\n    return () => {}; // eslint-disable-line no-empty-function\n  }\n\n  // Merge default options with passed settings\n  const options = {\n    ...defaultOptions,\n    ...opt\n  };\n\n  // Set level of logs\n  Logger.setLoggerLevel(options.loggerLevel);\n\n  // Initialize browser class\n  const browser = new Browser();\n\n  return function(str) {\n    // Inject the custom mutation to replace the state on load\n    str.registerModule('@@VWE_Helper', {\n      mutations: {\n        vweReplaceState(state, payload) {\n          Object.keys(str.state).forEach(function(key) {\n            str.state[key] = payload[key];\n          });\n        }\n      }\n    });\n\n    // Get type of script and initialize connection\n    browser.isBackgroundScript(window).then(function(isBackground) {\n      if (isBackground) {\n        return new BackgroundScript(str, browser, options);\n      }\n\n      return new ContentScript(str, browser, options);\n    });\n  };\n}\n"],"names":["instance","loggerLevel","this","logLevel","levels","indexOf","message","printMessage","level","shouldLog","capitalizedLevel","charAt","toUpperCase","slice","formattedMessage","console","error","warn","info","log","Logger","filterObject","source","keys","newObject","forEach","key","value","BackgroundScript","connection","onDisconnect","addListener","conn","b","receivedMutations","receivedActions","onMessage","connections","push","syncCurrentState","i","length","name","splice","type","data","store","commit","payload","dispatch","postMessage","state","err","mutation","verbose","action","browser","settings","persistentStates","getPersistentStates","then","savedStates","debug","e","subscribe","ignoredMutations","includes","sendMutation","j","savePersistentStates","syncActions","subscribeAction","ignoredActions","sendAction","handleConnection","onConnection","browsers","Object","freeze","firefox","namespace","chrome","edge","Browser","script","Promise","resolve","runtime","getBackgroundPage","backgroundPage","reject","a","storage","local","get","datas","set","@@vwe-persistence","callback","onConnect","connectionName","connect","detectBrowser","ContentScript","initialized","processPendingMutations","pendingMutations","pendingActions","scriptId","Math","random","toString","substr","connectToBackground","hookMutation","Event","hookAction","defaultOptions","opt","window","options","setLoggerLevel","str","registerModule","mutations","vweReplaceState","isBackgroundScript","isBackground"],"mappings":"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"}